<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.ontio.mapper.TxDetailMapper">
  <resultMap id="BaseResultMap" type="com.github.ontio.model.dao.TxDetail">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <id column="tx_index" jdbcType="INTEGER" property="txIndex" />
    <result column="tx_type" jdbcType="INTEGER" property="txType" />
    <result column="tx_time" jdbcType="INTEGER" property="txTime" />
    <result column="block_height" jdbcType="INTEGER" property="blockHeight" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="asset_name" jdbcType="VARCHAR" property="assetName" />
    <result column="from_address" jdbcType="VARCHAR" property="fromAddress" />
    <result column="to_address" jdbcType="VARCHAR" property="toAddress" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="block_index" jdbcType="INTEGER" property="blockIndex" />
    <result column="confirm_flag" jdbcType="INTEGER" property="confirmFlag" />
    <result column="event_type" jdbcType="INTEGER" property="eventType" />
    <result column="contract_hash" jdbcType="VARCHAR" property="contractHash" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="called_contract_hash" jdbcType="VARCHAR" property="calledContractHash" />
  </resultMap>

    <cache type="com.github.ontio.config.RedisCache">
        <property name="eviction" value="LRU" />
        <property name="size" value="1024" />
        <property name="readOnly" value="false" />
    </cache>

    <sql id="txBasicColumns">
        tx_hash as txHash,
        tx_type as txType,
        tx_time as txTime,
        block_height as blockHeight,
        confirm_flag as confirmFlag,
        block_index as blockIndex,
        fee as fee
    </sql>

    <sql id="txDetailColumns">
        tx_hash as txHash,
        tx_type as txType,
        tx_time as txTime,
        block_height as blockHeight,
        confirm_flag as confirmFlag,
        block_index as blockIndex,
        fee as fee,
        description as description,
        event_type as eventType
    </sql>

    <sql id="transferTxDetailColumns">
        tx_hash as txHash,
        tx_type as txType,
        tx_time as txTime,
        block_height as blockHeight,
        confirm_flag as confirmFlag,
        block_index as blockIndex,
        fee as fee,
		asset_name as assetName,
		amount as amount,
		to_address as toAddress,
		from_address as fromAddress,
		tx_index as txIndex,
		contract_hash as contractHash
    </sql>



    <select id="selectTxByHash" parameterType="java.lang.String" resultType="com.github.ontio.model.dto.TxDetailDto">
        select <include refid="txDetailColumns" />
        from tbl_tx_detail
        where tx_hash = #{txHash}
        order by tx_index
        limit 1
    </select>

    <select id="selectTransferTxDetailByHash" parameterType="java.lang.String" resultType="com.github.ontio.model.dto.TxDetailDto">
        select to_address as toAddress, from_address as fromAddress, amount as amount, asset_name as assetName, description as description, contract_hash as contractHash
        from tbl_tx_detail
        where tx_hash = #{txHash}
        and event_type in (2,3,7)
    </select>

    <select id="selectLatestOntTransferTxTime" parameterType="java.lang.String" resultType="java.lang.Integer" useCache="false">
        select tx_time as txTime
        from tbl_tx_detail
        where (from_address = #{address} or to_address = #{address})
        and asset_name = 'ont'
        order by block_height DESC
        limit 1
    </select>


    <select id="selectTransferTxsByPage" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT
        <include refid="transferTxDetailColumns"/>
        FROM tbl_tx_detail d
        INNER JOIN
        (
        SELECT DISTINCT tx_hash AS `hash`
        FROM tbl_tx_detail_index
        WHERE address = #{address}
        <if test="assetName != '' and assetName != null">
            AND asset_name = #{assetName}
        </if>
        ORDER BY desc_block_height, tx_hash, tx_index
        LIMIT #{startIndex}, #{pageSize}
        ) idx ON idx.hash = d.tx_hash
        WHERE d.from_address = #{address}
        OR d.to_address = #{address}
        <if test="assetName != '' and assetName != null">
            AND d.asset_name = #{assetName}
        </if>
        AND d.event_type IN (2, 3)
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>

    <select id="selectTransferTxsByTime" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT
        <include refid="transferTxDetailColumns"/>
        FROM tbl_tx_detail d
        INNER JOIN
        (
        SELECT tx_hash AS `hash`, tx_index AS `index`
        FROM tbl_tx_detail_index
        WHERE address = #{address}
        AND tx_time &gt;= #{startTime}
        AND tx_time &lt;= #{endTime}
        <if test="assetName != '' and assetName != null">
            AND asset_name = #{assetName}
        </if>
        ORDER BY desc_block_height, tx_hash, tx_index
        ) idx ON idx.hash = d.tx_hash AND idx.`index` = d.tx_index
    </select>


    <!--use for ONTO-->
    <select id="selectTransferTxsByTime4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT *
        FROM
        (
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE from_address = #{address}
        <if test="assetName != '' and assetName != null">
            and asset_name = #{assetName}
        </if>
        AND event_type = 3
        UNION ALL
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE to_address = #{address}
        <if test="assetName != '' and assetName != null">
            and asset_name = #{assetName}
        </if>
        AND event_type = 3
        ) a
        where a.txTime &gt;= #{startTime}
        and <![CDATA[ a.txTime <= #{endTime} ]]>
        ORDER BY a.blockHeight DESC, a.txHash, a.txIndex
    </select>


    <!--use for ONTO-->
    <select id="selectTransferTxsByTimeInFromAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE from_address = #{address}
        <if test="assetName != '' and assetName != null">
            and asset_name = #{assetName}
        </if>
        AND event_type = 3
        AND tx_time &gt;= #{startTime}
        and <![CDATA[ tx_time <= #{endTime} ]]>
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>


    <!--use for ONTO-->
    <select id="selectTransferTxsByTimeInToAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE to_address = #{address}
        <if test="assetName != '' and assetName != null">
            and asset_name = #{assetName}
        </if>
        AND event_type = 3
        AND tx_time &gt;= #{startTime}
        and <![CDATA[ tx_time <= #{endTime} ]]>
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>


    <!--use for ONTO-->
    <select id="selectTransferTxsByTimeAndPage4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT *
        FROM
        (
            SELECT <include refid="transferTxDetailColumns" />
            FROM tbl_tx_detail
            WHERE from_address = #{address}
            <if test="assetName != '' and assetName != null">
                and asset_name = #{assetName}
            </if>
            AND event_type = 3
            UNION ALL
            SELECT <include refid="transferTxDetailColumns" />
            FROM tbl_tx_detail
            WHERE to_address = #{address}
            <if test="assetName != '' and assetName != null">
                and asset_name = #{assetName}
            </if>
            AND event_type = 3
        ) a
        where <![CDATA[ a.txTime < #{endTime} ]]>
        ORDER BY a.txTime DESC
        limit #{pageSize}
    </select>

    <!--use for ONTO-->
    <select id="selectTransferTxsByTimeAndPageInFromAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE from_address = #{address}
        <if test="assetName != '' and assetName != null">
            and asset_name = #{assetName}
        </if>
        AND event_type = 3
        AND <![CDATA[ tx_time < #{endTime} ]]>
        ORDER BY tx_time DESC
        limit #{pageSize}
    </select>

    <!--use for ONTO-->
    <select id="selectTransferTxsByTimeAndPageInToAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE to_address = #{address}
        <if test="assetName != '' and assetName != null">
            and asset_name = #{assetName}
        </if>
        AND event_type = 3
        AND <![CDATA[ tx_time < #{endTime} ]]>
        ORDER BY tx_time DESC
        limit #{pageSize}
    </select>


    <!--use for ONTO-->
    <select id="selectDragonTransferTxsByTime4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT *
        FROM
        (
            SELECT <include refid="transferTxDetailColumns" />
            FROM tbl_tx_detail
            WHERE from_address = #{address}
            and asset_name like #{assetName}
            AND event_type = 3
            UNION ALL
            SELECT <include refid="transferTxDetailColumns" />
            FROM tbl_tx_detail
            WHERE to_address = #{address}
            and asset_name like #{assetName}
            AND event_type = 3
        ) a
        where a.txTime &gt;= #{startTime}
        and <![CDATA[ a.txTime <= #{endTime} ]]>
        ORDER BY a.blockHeight DESC, a.txHash, a.txIndex
    </select>

    <!--use for ONTO-->
    <select id="selectDragonTransferTxsByTimeInFromAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE from_address = #{address}
        and asset_name like #{assetName}
        AND event_type = 3
        AND tx_time &gt;= #{startTime}
        and <![CDATA[ tx_time <= #{endTime} ]]>
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>


    <!--use for ONTO-->
    <select id="selectDragonTransferTxsByTimeInToAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE to_address = #{address}
        and asset_name like #{assetName}
        AND event_type = 3
        AND tx_time &gt;= #{startTime}
        and <![CDATA[ tx_time <= #{endTime} ]]>
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>


    <!--use for ONTO-->
    <select id="selectDragonTransferTxsByTimeAndPage4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT *
        FROM
        (
            SELECT <include refid="transferTxDetailColumns" />
            FROM tbl_tx_detail
            WHERE from_address = #{address}
            and asset_name like #{assetName}
            AND event_type = 3
            UNION ALL
            SELECT <include refid="transferTxDetailColumns" />
            FROM tbl_tx_detail
            WHERE to_address = #{address}
            and asset_name like #{assetName}
            AND event_type = 3
        ) a
        where <![CDATA[ a.txTime < #{endTime} ]]>
        ORDER BY a.txTime DESC
        limit #{pageSize}
    </select>

    <!--use for ONTO-->
    <select id="selectDragonTransferTxsByTimeAndPageInFromAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE from_address = #{address}
        and asset_name like #{assetName}
        AND event_type = 3
        where <![CDATA[ tx_time < #{endTime} ]]>
        ORDER BY tx_time DESC
        limit #{pageSize}
    </select>

    <!--use for ONTO-->
    <select id="selectDragonTransferTxsByTimeAndPageInToAddr4Onto" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT <include refid="transferTxDetailColumns" />
        FROM tbl_tx_detail
        WHERE to_address = #{address}
        and asset_name like #{assetName}
        AND event_type = 3
        where <![CDATA[ tx_time < #{endTime} ]]>
        ORDER BY tx_time DESC
        limit #{pageSize}
    </select>


    <select id="selectTransferTxCountByAddr" resultType="java.lang.Integer">
        SELECT count(1)
        FROM tbl_tx_detail
        WHERE from_address = #{address} OR to_address = #{address}
    </select>

    <select id="selectTransferTxsOfTokenType" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT
        <include refid="transferTxDetailColumns"/>
        <choose>
            <when test="token_type == 'oep4'">
                FROM tbl_oep4_tx_detail d
            </when>
            <when test="token_type == 'oep5'">
                FROM tbl_oep5_tx_detail d
            </when>
            <otherwise>
                FROM tbl_oep8_tx_detail d
            </otherwise>
        </choose>
        INNER JOIN
        (
        SELECT DISTINCT idx.tx_hash AS `hash`
        FROM tbl_tx_detail_index idx
        <choose>
            <when test="token_type == 'oep4'">
                INNER JOIN tbl_oep4 o
            </when>
            <when test="token_type == 'oep5'">
                INNER JOIN tbl_oep5 o
            </when>
            <otherwise>
                INNER JOIN tbl_oep8 o
            </otherwise>
        </choose>
        ON o.contract_hash = idx.called_contract_hash
        WHERE idx.address = #{address}
        AND o.audit_flag = 1
        ORDER BY idx.desc_block_height, idx.tx_hash, idx.tx_index
        LIMIT #{startIndex}, #{pageSize}
        ) idx ON idx.hash = d.tx_hash
        WHERE d.from_address = #{address}
        OR d.to_address = #{address}
        AND d.event_type IN (2, 3)
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>

    <select id="selectCalledContractHashesOfTokenType" resultType="java.lang.String">
        SELECT
        DISTINCT o.contract_hash
        <choose>
            <when test="tokenType == 'oep4'">
                FROM tbl_oep4 o
            </when>
            <when test="tokenType == 'oep5'">
                FROM tbl_oep5 o
            </when>
            <otherwise>
                FROM tbl_oep8 o
            </otherwise>
        </choose>
        WHERE o.audit_flag = 1
    </select>

    <select id="selectAssetNamesOfTokenType" resultType="java.lang.String">
        SELECT
        DISTINCT o.symbol
        <choose>
            <when test="tokenType == 'oep4'">
                FROM tbl_oep4 o
            </when>
            <when test="tokenType == 'oep5'">
                FROM tbl_oep5 o
            </when>
            <otherwise>
                FROM tbl_oep8 o
            </otherwise>
        </choose>
        WHERE o.audit_flag = 1
    </select>

    <select id="selectTransferTxsOfHashes" resultType="com.github.ontio.model.dto.TransferTxDto">
        SELECT
        <include refid="transferTxDetailColumns"/>
        <choose>
            <when test="tokenType == 'oep4'">
                FROM tbl_oep4_tx_detail d
            </when>
            <when test="tokenType == 'oep5'">
                FROM tbl_oep5_tx_detail d
            </when>
            <otherwise>
                FROM tbl_oep8_tx_detail d
            </otherwise>
        </choose>
        INNER JOIN
        (
        SELECT DISTINCT idx.tx_hash AS `hash`
        FROM tbl_tx_detail_index idx
        WHERE idx.address = #{address}
        <if test="hashes != null and hashes.size() > 0">
            AND
            <if test="assetNames != null and assetNames.size() > 0 and address != 'AFmseVrdL9f9oyCzZefL9tG6UbviEH9ugK'">
                (
            </if>
            idx.called_contract_hash IN
            <foreach collection="hashes" item="hash" open="(" separator="," close=")">
                #{hash}
            </foreach>
        </if>
        <if test="assetNames != null and assetNames.size() > 0 and address != 'AFmseVrdL9f9oyCzZefL9tG6UbviEH9ugK'">
            OR idx.asset_name IN
            <foreach collection="assetNames" item="assetName" open="(" separator="," close=")">
                #{assetName}
            </foreach>
            )
        </if>
        ORDER BY idx.desc_block_height, idx.tx_hash, idx.tx_index
        LIMIT #{startIndex}, #{pageSize}
        ) idx ON idx.hash = d.tx_hash
        WHERE d.from_address = #{address}
        OR d.to_address = #{address}
        AND d.event_type IN (2, 3)
        ORDER BY block_height DESC, tx_hash, tx_index
    </select>

</mapper>