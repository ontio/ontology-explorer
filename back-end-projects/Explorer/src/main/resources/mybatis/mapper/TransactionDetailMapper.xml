<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.ontio.dao.TransactionDetailMapper">



  <resultMap id="BaseResultMap" type="com.github.ontio.model.TransactionDetail">
    <id column="txnhash" jdbcType="VARCHAR" property="txnhash" />
    <id column="txnindex" jdbcType="INTEGER" property="txnindex" />
    <result column="txntype" jdbcType="INTEGER" property="txntype" />
    <result column="txntime" jdbcType="INTEGER" property="txntime" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="assetname" jdbcType="VARCHAR" property="assetname" />
    <result column="fromaddress" jdbcType="VARCHAR" property="fromaddress" />
    <result column="toaddress" jdbcType="VARCHAR" property="toaddress" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="blockindex" jdbcType="INTEGER" property="blockindex" />
    <result column="confirmflag" jdbcType="INTEGER" property="confirmflag" />
    <result column="eventtype" jdbcType="INTEGER" property="eventtype" />
    <result column="contracthash" jdbcType="VARCHAR" property="contracthash" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="calledcontracthash" jdbcType="VARCHAR" property="calledcontracthash" />
  </resultMap>
  <sql id="Base_Column_List">
    txnhash, txnindex, txntype, txntime, height, amount, fee, assetname, fromaddress, 
    toaddress, description, blockindex, confirmflag, eventtype, contracthash, payer, 
    calledcontracthash
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.github.ontio.model.TransactionDetail" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_ont_txn_detail
    where txnhash = #{txnhash,jdbcType=VARCHAR}
      and txnindex = #{txnindex,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.github.ontio.model.TransactionDetail">
    delete from tbl_ont_txn_detail
    where txnhash = #{txnhash,jdbcType=VARCHAR}
      and txnindex = #{txnindex,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.ontio.model.TransactionDetail">
    insert into tbl_ont_txn_detail (txnhash, txnindex, txntype, 
      txntime, height, amount, 
      fee, assetname, fromaddress, 
      toaddress, description, blockindex, 
      confirmflag, eventtype, contracthash, 
      payer, calledcontracthash)
    values (#{txnhash,jdbcType=VARCHAR}, #{txnindex,jdbcType=INTEGER}, #{txntype,jdbcType=INTEGER}, 
      #{txntime,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{fee,jdbcType=DECIMAL}, #{assetname,jdbcType=VARCHAR}, #{fromaddress,jdbcType=VARCHAR}, 
      #{toaddress,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{blockindex,jdbcType=INTEGER}, 
      #{confirmflag,jdbcType=INTEGER}, #{eventtype,jdbcType=INTEGER}, #{contracthash,jdbcType=VARCHAR}, 
      #{payer,jdbcType=VARCHAR}, #{calledcontracthash,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.github.ontio.model.TransactionDetail">
    insert into tbl_ont_txn_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="txnhash != null">
        txnhash,
      </if>
      <if test="txnindex != null">
        txnindex,
      </if>
      <if test="txntype != null">
        txntype,
      </if>
      <if test="txntime != null">
        txntime,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="assetname != null">
        assetname,
      </if>
      <if test="fromaddress != null">
        fromaddress,
      </if>
      <if test="toaddress != null">
        toaddress,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="blockindex != null">
        blockindex,
      </if>
      <if test="confirmflag != null">
        confirmflag,
      </if>
      <if test="eventtype != null">
        eventtype,
      </if>
      <if test="contracthash != null">
        contracthash,
      </if>
      <if test="payer != null">
        payer,
      </if>
      <if test="calledcontracthash != null">
        calledcontracthash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="txnhash != null">
        #{txnhash,jdbcType=VARCHAR},
      </if>
      <if test="txnindex != null">
        #{txnindex,jdbcType=INTEGER},
      </if>
      <if test="txntype != null">
        #{txntype,jdbcType=INTEGER},
      </if>
      <if test="txntime != null">
        #{txntime,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="assetname != null">
        #{assetname,jdbcType=VARCHAR},
      </if>
      <if test="fromaddress != null">
        #{fromaddress,jdbcType=VARCHAR},
      </if>
      <if test="toaddress != null">
        #{toaddress,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="blockindex != null">
        #{blockindex,jdbcType=INTEGER},
      </if>
      <if test="confirmflag != null">
        #{confirmflag,jdbcType=INTEGER},
      </if>
      <if test="eventtype != null">
        #{eventtype,jdbcType=INTEGER},
      </if>
      <if test="contracthash != null">
        #{contracthash,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="calledcontracthash != null">
        #{calledcontracthash,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.ontio.model.TransactionDetail">
    update tbl_ont_txn_detail
    <set>
      <if test="txntype != null">
        txntype = #{txntype,jdbcType=INTEGER},
      </if>
      <if test="txntime != null">
        txntime = #{txntime,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="assetname != null">
        assetname = #{assetname,jdbcType=VARCHAR},
      </if>
      <if test="fromaddress != null">
        fromaddress = #{fromaddress,jdbcType=VARCHAR},
      </if>
      <if test="toaddress != null">
        toaddress = #{toaddress,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="blockindex != null">
        blockindex = #{blockindex,jdbcType=INTEGER},
      </if>
      <if test="confirmflag != null">
        confirmflag = #{confirmflag,jdbcType=INTEGER},
      </if>
      <if test="eventtype != null">
        eventtype = #{eventtype,jdbcType=INTEGER},
      </if>
      <if test="contracthash != null">
        contracthash = #{contracthash,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        payer = #{payer,jdbcType=VARCHAR},
      </if>
      <if test="calledcontracthash != null">
        calledcontracthash = #{calledcontracthash,jdbcType=VARCHAR},
      </if>
    </set>
    where txnhash = #{txnhash,jdbcType=VARCHAR}
      and txnindex = #{txnindex,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.ontio.model.TransactionDetail">
    update tbl_ont_txn_detail
    set txntype = #{txntype,jdbcType=INTEGER},
      txntime = #{txntime,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      assetname = #{assetname,jdbcType=VARCHAR},
      fromaddress = #{fromaddress,jdbcType=VARCHAR},
      toaddress = #{toaddress,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      blockindex = #{blockindex,jdbcType=INTEGER},
      confirmflag = #{confirmflag,jdbcType=INTEGER},
      eventtype = #{eventtype,jdbcType=INTEGER},
      contracthash = #{contracthash,jdbcType=VARCHAR},
      payer = #{payer,jdbcType=VARCHAR},
      calledcontracthash = #{calledcontracthash,jdbcType=VARCHAR}
    where txnhash = #{txnhash,jdbcType=VARCHAR}
      and txnindex = #{txnindex,jdbcType=INTEGER}
  </update>




  <select id="selectTxnWithoutOntId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select distinct TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee
    from tbl_ont_txn_detail
    where eventtype not in(1, 4)
/*    group by txnhash*/
    order by height DESC
    limit #{param1}, #{param2}
  </select>

  <select id="selectTxnByHash" parameterType="java.lang.String" resultType="java.util.Map">
    select TxnHash, Height, TxnType, TxnTime, Description, ConfirmFlag, BlockIndex, Fee
    from tbl_ont_txn_detail
    where txnhash = #{txnHash}
    order by txnindex
    limit 1
  </select>

  <select id="selectTransferTxnDetailByHash" parameterType="java.lang.String" resultType="java.util.Map">
    select ToAddress, FromAddress, Amount, AssetName, Description
    from tbl_ont_txn_detail
    where txnhash = #{txnHash}
    and eventtype in (1,3)
  </select>

    <select id="selectTxnByFromAddressInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
        from tbl_ont_txn_detail
        where fromaddress = #{Address}
        <if test="AssetName != '' and AssetName != null">
            and assetname = #{AssetName}
        </if>
        and eventtype in (1,3)
        order by height DESC
        limit #{Start}, #{PageSize}
    </select>


    <select id="selectTxnByToAddressInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
        from tbl_ont_txn_detail
        where toaddress = #{Address}
        <if test="AssetName != '' and AssetName != null">
            and assetname = #{AssetName}
        </if>
        and eventtype in (1,3)
        order by height DESC
        limit #{Start}, #{PageSize}
    </select>


  <select id="selectTxnByAddressInfoAndTimePage" parameterType="java.util.Map" resultType="java.util.Map">
    select t2.* from (
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where toaddress = #{Address}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    and  eventtype = 3
    union all
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where fromaddress = #{Address}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    and  eventtype = 3
    ) as t2
    where <![CDATA[ t2.TxnTime < #{EndTime} ]]>
    order by t2.TxnTime msg
    limit #{PageSize}
  </select>


  <select id="selectTxnByAddressInfoAndTimePageDragon" parameterType="java.util.Map" resultType="java.util.Map">
    select t2.* from (
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where toaddress = #{Address}
    and assetname like #{AssetName}
    and  eventtype = 3
    union all
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where fromaddress = #{Address}
    and assetname like #{AssetName}
    and  eventtype = 3
    ) as t2
    where <![CDATA[ t2.TxnTime < #{EndTime} ]]>
    order by t2.TxnTime msg
    limit #{PageSize}
  </select>


  <select id="selectTxnByAddressInfoAndTime" parameterType="java.util.Map" resultType="java.util.Map">
    select t2.* from (
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where toaddress = #{Address}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    and  eventtype = 3
    union all
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where fromaddress = #{Address}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    and  eventtype = 3
    ) as t2
    where t2.TxnTime &gt;= #{BeginTime}
    <if test="EndTime != null and EndTime != ''">
      and  <![CDATA[ t2.TxnTime < #{EndTime} ]]>
    </if>
    order by t2.TxnTime msg
  </select>


  <select id="selectTxnByAddressInfoAndTimeDragon" parameterType="java.util.Map" resultType="java.util.Map">
    select t2.* from (
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where toaddress = #{Address}
    and assetname like #{AssetName}
    and  eventtype = 3
    union all
    select TxnHash, Height, TxnType, TxnTime, ConfirmFlag, BlockIndex, Fee, AssetName, Amount, ToAddress, FromAddress, TxnIndex
    from tbl_ont_txn_detail
    where fromaddress = #{Address}
    and assetname like #{AssetName}
    and  eventtype = 3
    ) as t2
    where t2.TxnTime &gt;= #{BeginTime}
    <if test="EndTime != null and EndTime != ''">
      and  <![CDATA[ t2.TxnTime < #{EndTime} ]]>
    </if>
    order by t2.TxnTime msg
  </select>


  <select id="selectTxnAmountByAddressInfo" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(distinct(t2.txnhash)) from (
    select txnhash
    from tbl_ont_txn_detail
    where toaddress = #{Address}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    and eventtype in (1,3)
    union all
    select txnhash
    from tbl_ont_txn_detail
    where fromaddress = #{Address}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    and eventtype in (1,3)
    ) as t2
  </select>


  <select id="selectTxnByBlockHeight" parameterType="java.lang.Integer" resultType="java.util.Map">
    select DISTINCT TxnHash, Height, TxnTime, ConfirmFlag
    from tbl_ont_txn_detail
    where height = #{param1}
  </select>


  <select id="selectLastONTTransferTxnTime" parameterType="java.lang.String" resultType="java.lang.Integer">
    select TxnTime
    from tbl_ont_txn_detail
    where (fromaddress = #{param1} or toaddress = #{param1})
    and assetname = 'ont'
    order by height DESC
    limit 1
  </select>


  <select id="selectAddressRecordAmount" resultType="java.lang.Integer">
    SELECT count(1)
    FROM
	tbl_ont_txn_detail
    WHERE
	fromaddress = #{param1}
	OR toaddress = #{param1}
  </select>

  <select id="selectContractByHash" parameterType="java.util.Map" resultType="java.util.Map" useCache="false">
    select distinct TxnHash, Height, TxnType, TxnTime, ConfirmFlag, Fee
    from tbl_ont_txn_detail
    where contracthash = #{contractHash}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
    order by txnTime DESC
    limit #{Start}, #{PageSize}
  </select>

  <select id="selectContractCountByHash" parameterType="java.util.Map" resultType="java.lang.Integer" useCache="false">
    select count(distinct TxnHash, Height, TxnType, TxnTime, ConfirmFlag, Fee)
    from tbl_ont_txn_detail
    where contracthash = #{contractHash}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
  </select>

  <select id="selectOep5ContractCountByHash" parameterType="java.util.Map" resultType="java.lang.Integer" useCache="false">
    select count(distinct TxnHash, Height, TxnType, TxnTime, ConfirmFlag, Fee, Contracthash, Assetname)
    from tbl_ont_txn_detail
    where contracthash = #{contractHash}
    <if test="AssetName != '' and AssetName != null">
      and assetname = #{AssetName}
    </if>
  </select>

  <select id="selectOep5ByHash" parameterType="java.util.Map" resultType="java.util.Map" useCache="false">
    SELECT a.*, b.Jsonurl from (
    select distinct TxnHash, Height, TxnType, TxnTime, ConfirmFlag, Fee, Contracthash, Assetname
        from tbl_ont_txn_detail
        where contracthash = #{contractHash}
        order by txnTime DESC
        limit #{Start}, #{PageSize}
    ) a
    LEFT JOIN tbl_ont_oep5_dragon b
    on a.Contracthash = b.contract and a.assetname = b.assertname
    ORDER by txnTime DESC
  </select>


  <select id="selectAllFromAddress" resultType="java.lang.String">
    select DISTINCT (fromaddress)
    from tbl_ont_txn_detail
  </select>

  <select id="selectAllToAddress" resultType="java.lang.String">
    select DISTINCT (toaddress)
    from tbl_ont_txn_detail
  </select>




  <select id="selectTxnByAddress" parameterType="java.util.Map" resultType="java.util.Map">
    select t2.* from (
    select TxnHash, TxnTime, ConfirmFlag, Fee, AssetName, Amount, ToAddress, FromAddress
    from tbl_ont_txn_detail
    where toaddress = #{Address}
    and  eventtype = 3
    union all
    select TxnHash, TxnTime, ConfirmFlag, Fee, AssetName, Amount, ToAddress, FromAddress
    from tbl_ont_txn_detail
    where fromaddress = #{Address}
    and  eventtype = 3
    ) as t2
    order by t2.TxnTime msg
  </select>


  <select id="queryTransactionCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(DISTINCT(txnhash))
    from tbl_ont_txn_detail
    where txntime &gt;= #{startTime}
    and <![CDATA[ txntime < #{endTime} ]]>
  </select>


  <select id="selectContractTokenAllSum" parameterType="java.util.Map" resultType="java.util.Map" useCache="false">
        SELECT SUM(amount) as Amount, Assetname
        from tbl_ont_txn_detail
        where confirmflag = 1 and contracthash = #{contractHash} and description = 'transfer'
        <if test="OEP5 == null">
          GROUP BY assetname
        </if>
  </select>

</mapper>